#!/bin/bash
# generate a new patchlevel.h file before committing. --Ambrosia

# Enable automatic pushing of tags
git config push.followTags true

curr_branch=$(git branch | grep '*' | cut -d" " -f2)
template_check=$(grep -q "PATCHLEVEL_CHANGED 1" $(pwd)/Server/hdrs/patchlevel.template && echo "1" || echo "0")
template_commit=$(echo $(git diff --cached --name-only) | grep -q "Server/hdrs/patchlevel.template" && echo "1" || echo "0")

if [[ "${curr_branch}" != "master" ]]; then
    if [[ "${template_check}" -eq "1" ]] || [[ "${template_commit}" -eq "1" ]];then
        echo " "
        echo "WARNING: 'patchlevel.template' modified outside the master branch!"
        echo "         This is fine if you just merged master into the current branch."
        echo " "
        echo "         Do not modify it when working in your own branch."
        echo " "
        echo "         Only modify it when merging into master."
        sleep 7
    fi
else
    if [[ "${template_check}" -eq "0" ]] || [[ "${template_commit}" -eq "0" ]];then
        echo " "
        echo "ERROR: You have not prepared patchlevel.template for a version update!" >&2
        echo "       Please perform the following steps:" >&2
        [[ "${template_check}"  -eq "0" ]] && echo "       Set the PATCHLEVEL_CHECKED comment in the file to 1" >&2
        [[ "${template_commit}" -eq "0" ]] && echo "       Modify the version number(s) in the file and add it to the commit." >&2
        exit 1
    fi

    git fetch
    ISBEHIND=$(git status -sb | grep -qi behind && echo "1" || echo "0")
        if [[ "${ISBEHIND}" -eq "1" ]];then
        echo " "
        echo "ERROR: The remote master branch is more up to date!" >&2
        echo "       New refs have been fetched. Please run 'git merge' before running" >&2
        echo "       'git commit' again. Make sure your 'patchlevel.template' file changes" >&2
        echo "       do not get overwritten!" >&2
        exit 1
    fi

    version_regex='^([0-9]+)\.([0-9]+)(\+.+)*$'
    current_tag=$(git describe --tags --abbrev=0 --candidates=1)
    current_tag=$(echo ${current_tag} | tr -d 'v')
    if [[ ${current_tag} =~ ${version_regex} ]]; then
        current_major="${BASH_REMATCH[1]}"
        current_minor="${BASH_REMATCH[2]}"
        current_patch=$(git grep PATCH_VERSION $(git ls-remote . 'refs/remotes/*/HEAD' |cut -f 1) | grep -v pre-commit |grep -v pre-push | grep ':hdrs/patchlevel.h:' | awk '{print $3}' |tr -d '"')
    else
        echo " "
        echo "ERROR: 'git describe --tags --candidates=1' did not output a valid version" >&2
        echo "        string for the current repo. Unable to use patchlevel.template." >&2
        echo "        This requires manual fixing of the repository." >&2
        exit 1
    fi
    pfile_major=$(grep "#define MAJOR_VERSION " $(pwd)/Server/hdrs/patchlevel.template | awk '{print $3}' |tr -d '"')
    pfile_minor=$(grep "#define MINOR_VERSION " $(pwd)/Server/hdrs/patchlevel.template | awk '{print $3}' |tr -d '"')
    pfile_patch=$(grep "#define PATCH_VERSION " $(pwd)/Server/hdrs/patchlevel.template | awk '{print $3}' |tr -d '"')
    pfile_ext=$(grep "#define VERSION_EXT " $(pwd)/Server/hdrs/patchlevel.template | awk '{print $3}' |tr -d '"')
    is_larger=0
    major_changed=0
    minor_changed=0
    patch_changed=0
    for i in major minor patch
    do
        tempvar=pfile_${i}
        tempvar2=current_${i}
        if [[ "${!tempvar}" -lt "${!tempvar2}" ]];then
            if [[ "$(( $major_changed + $minor_changed + $patch_changed ))" -eq "0" ]];then
                echo "ERROR: The new version number can not be lower than the current one!" >&2
                exit 1
            fi
        elif [[ "${!tempvar}" -gt "${!tempvar2}" ]];then
           eval ${i}_changed=1
        fi
    done
    if [[ "$(( ${major_changed} + ${minor_changed} + ${patch_changed} ))" -eq "0" ]];then
        echo "ERROR: The new version number must be different from the old one!" >&2
        exit 1
    fi

    cp $(pwd)/Server/hdrs/patchlevel.template $(pwd)/Server/hdrs/patchlevel.h
    sed -i "s/PATCHLEVEL_CHANGED 1/PATCHLEVEL_CHANGED 0/g" $(pwd)/Server/hdrs/patchlevel.template
    git add $(pwd)/Server/hdrs/patchlevel.template
    YEAR=$(date +%Y)
    MONTH=$(date +%m)
    DAY=$(date +%d)
    sed -i "s/YYYY/${YEAR}/g" $(pwd)/Server/hdrs/patchlevel.h
    sed -i "s/MM/${MONTH}/g" $(pwd)/Server/hdrs/patchlevel.h
    sed -i "s/DD/${DAY}/g" $(pwd)/Server/hdrs/patchlevel.h
    git add $(pwd)/Server/hdrs/patchlevel.h
    echo " "
    echo "NOTE: Please 'git push' your changes to the master branch"
    echo "      ASAP to avoid versioning conflicts!"
    sleep 3
fi

